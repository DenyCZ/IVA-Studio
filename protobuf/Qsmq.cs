// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: qsmq.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from qsmq.proto</summary>
public static partial class QsmqReflection {

  #region Descriptor
  /// <summary>File descriptor for qsmq.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static QsmqReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cgpxc21xLnByb3RvIjIKBEJCb3gSCQoBeBgBIAEoBRIJCgF5GAIgASgFEgkK",
          "AXcYAyABKAUSCQoBaBgEIAEoBSIdCgVQb2ludBIJCgF4GAEgASgFEgkKAXkY",
          "AiABKAUiLAoHUG9seWdvbhIRCgFwGAEgAygLMgYuUG9pbnQSDgoGY2xvc2Vk",
          "GAIgASgIIiUKClNlZ21PYmplY3QSFwoFcG9seXMYASADKAsyCC5Qb2x5Z29u",
          "IpQBChBPYmplY3RBbm5vdGF0aW9uEhAKCGNsYXNzX2lkGAEgASgFEg0KBXNj",
          "b3JlGAIgASgCEhMKBGJib3gYAyABKAsyBS5CQm94EhkKBHNlZ20YBCABKAsy",
          "Cy5TZWdtT2JqZWN0Eh0KDWZsb3JwbGFucG9pbnQYBSABKAsyBi5Qb2ludBIQ",
          "CghmZWF0dXJlcxgGIAEoCSJ7CglJbWFnZVZpZXcSFgoOY29udmVyc2lvblR5",
          "cGUYASABKAUSGAoQY29udmVyc2lvblBhcmFtcxgCIAMoAhIsChFvYmplY3RB",
          "bm5vdGF0aW9ucxgDIAMoCzIRLk9iamVjdEFubm90YXRpb24SDgoGaW1nS2V5",
          "GAQgASgJIlQKC0NhbWVyYUltYWdlEhcKD3ZpZGVvU3RyZWFtTmFtZRgBIAEo",
          "CRIRCgl0aW1lc3RhbXAYAiABKAESGQoFdmlld3MYAyADKAsyCi5JbWFnZVZp",
          "ZXdiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::BBox), global::BBox.Parser, new[]{ "X", "Y", "W", "H" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Point), global::Point.Parser, new[]{ "X", "Y" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Polygon), global::Polygon.Parser, new[]{ "P", "Closed" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SegmObject), global::SegmObject.Parser, new[]{ "Polys" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ObjectAnnotation), global::ObjectAnnotation.Parser, new[]{ "ClassId", "Score", "Bbox", "Segm", "Florplanpoint", "Features" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ImageView), global::ImageView.Parser, new[]{ "ConversionType", "ConversionParams", "ObjectAnnotations", "ImgKey" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CameraImage), global::CameraImage.Parser, new[]{ "VideoStreamName", "Timestamp", "Views" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class BBox : pb::IMessage<BBox> {
  private static readonly pb::MessageParser<BBox> _parser = new pb::MessageParser<BBox>(() => new BBox());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BBox> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::QsmqReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BBox() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BBox(BBox other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    w_ = other.w_;
    h_ = other.h_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BBox Clone() {
    return new BBox(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "w" field.</summary>
  public const int WFieldNumber = 3;
  private int w_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int W {
    get { return w_; }
    set {
      w_ = value;
    }
  }

  /// <summary>Field number for the "h" field.</summary>
  public const int HFieldNumber = 4;
  private int h_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int H {
    get { return h_; }
    set {
      h_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BBox);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BBox other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (W != other.W) return false;
    if (H != other.H) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (W != 0) hash ^= W.GetHashCode();
    if (H != 0) hash ^= H.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Y);
    }
    if (W != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(W);
    }
    if (H != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(H);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
    }
    if (W != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(W);
    }
    if (H != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(H);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BBox other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.W != 0) {
      W = other.W;
    }
    if (other.H != 0) {
      H = other.H;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadInt32();
          break;
        }
        case 16: {
          Y = input.ReadInt32();
          break;
        }
        case 24: {
          W = input.ReadInt32();
          break;
        }
        case 32: {
          H = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Point : pb::IMessage<Point> {
  private static readonly pb::MessageParser<Point> _parser = new pb::MessageParser<Point>(() => new Point());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Point> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::QsmqReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Point() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Point(Point other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Point Clone() {
    return new Point(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Point);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Point other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Y);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Point other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadInt32();
          break;
        }
        case 16: {
          Y = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Polygon : pb::IMessage<Polygon> {
  private static readonly pb::MessageParser<Polygon> _parser = new pb::MessageParser<Polygon>(() => new Polygon());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Polygon> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::QsmqReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Polygon() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Polygon(Polygon other) : this() {
    p_ = other.p_.Clone();
    closed_ = other.closed_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Polygon Clone() {
    return new Polygon(this);
  }

  /// <summary>Field number for the "p" field.</summary>
  public const int PFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Point> _repeated_p_codec
      = pb::FieldCodec.ForMessage(10, global::Point.Parser);
  private readonly pbc::RepeatedField<global::Point> p_ = new pbc::RepeatedField<global::Point>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Point> P {
    get { return p_; }
  }

  /// <summary>Field number for the "closed" field.</summary>
  public const int ClosedFieldNumber = 2;
  private bool closed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Closed {
    get { return closed_; }
    set {
      closed_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Polygon);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Polygon other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!p_.Equals(other.p_)) return false;
    if (Closed != other.Closed) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= p_.GetHashCode();
    if (Closed != false) hash ^= Closed.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    p_.WriteTo(output, _repeated_p_codec);
    if (Closed != false) {
      output.WriteRawTag(16);
      output.WriteBool(Closed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += p_.CalculateSize(_repeated_p_codec);
    if (Closed != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Polygon other) {
    if (other == null) {
      return;
    }
    p_.Add(other.p_);
    if (other.Closed != false) {
      Closed = other.Closed;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          p_.AddEntriesFrom(input, _repeated_p_codec);
          break;
        }
        case 16: {
          Closed = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class SegmObject : pb::IMessage<SegmObject> {
  private static readonly pb::MessageParser<SegmObject> _parser = new pb::MessageParser<SegmObject>(() => new SegmObject());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SegmObject> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::QsmqReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SegmObject() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SegmObject(SegmObject other) : this() {
    polys_ = other.polys_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SegmObject Clone() {
    return new SegmObject(this);
  }

  /// <summary>Field number for the "polys" field.</summary>
  public const int PolysFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Polygon> _repeated_polys_codec
      = pb::FieldCodec.ForMessage(10, global::Polygon.Parser);
  private readonly pbc::RepeatedField<global::Polygon> polys_ = new pbc::RepeatedField<global::Polygon>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Polygon> Polys {
    get { return polys_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SegmObject);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SegmObject other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!polys_.Equals(other.polys_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= polys_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    polys_.WriteTo(output, _repeated_polys_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += polys_.CalculateSize(_repeated_polys_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SegmObject other) {
    if (other == null) {
      return;
    }
    polys_.Add(other.polys_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          polys_.AddEntriesFrom(input, _repeated_polys_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class ObjectAnnotation : pb::IMessage<ObjectAnnotation> {
  private static readonly pb::MessageParser<ObjectAnnotation> _parser = new pb::MessageParser<ObjectAnnotation>(() => new ObjectAnnotation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ObjectAnnotation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::QsmqReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ObjectAnnotation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ObjectAnnotation(ObjectAnnotation other) : this() {
    classId_ = other.classId_;
    score_ = other.score_;
    Bbox = other.bbox_ != null ? other.Bbox.Clone() : null;
    Segm = other.segm_ != null ? other.Segm.Clone() : null;
    Florplanpoint = other.florplanpoint_ != null ? other.Florplanpoint.Clone() : null;
    features_ = other.features_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ObjectAnnotation Clone() {
    return new ObjectAnnotation(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private int classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 2;
  private float score_;
  /// <summary>
  /// 0.0 - not al all, 1.0 - 100%
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  /// <summary>Field number for the "bbox" field.</summary>
  public const int BboxFieldNumber = 3;
  private global::BBox bbox_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BBox Bbox {
    get { return bbox_; }
    set {
      bbox_ = value;
    }
  }

  /// <summary>Field number for the "segm" field.</summary>
  public const int SegmFieldNumber = 4;
  private global::SegmObject segm_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SegmObject Segm {
    get { return segm_; }
    set {
      segm_ = value;
    }
  }

  /// <summary>Field number for the "florplanpoint" field.</summary>
  public const int FlorplanpointFieldNumber = 5;
  private global::Point florplanpoint_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Point Florplanpoint {
    get { return florplanpoint_; }
    set {
      florplanpoint_ = value;
    }
  }

  /// <summary>Field number for the "features" field.</summary>
  public const int FeaturesFieldNumber = 6;
  private string features_ = "";
  /// <summary>
  /// dict of features in JSON as a string
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Features {
    get { return features_; }
    set {
      features_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ObjectAnnotation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ObjectAnnotation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Score, other.Score)) return false;
    if (!object.Equals(Bbox, other.Bbox)) return false;
    if (!object.Equals(Segm, other.Segm)) return false;
    if (!object.Equals(Florplanpoint, other.Florplanpoint)) return false;
    if (Features != other.Features) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (Score != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Score);
    if (bbox_ != null) hash ^= Bbox.GetHashCode();
    if (segm_ != null) hash ^= Segm.GetHashCode();
    if (florplanpoint_ != null) hash ^= Florplanpoint.GetHashCode();
    if (Features.Length != 0) hash ^= Features.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ClassId);
    }
    if (Score != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Score);
    }
    if (bbox_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Bbox);
    }
    if (segm_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Segm);
    }
    if (florplanpoint_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Florplanpoint);
    }
    if (Features.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Features);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClassId);
    }
    if (Score != 0F) {
      size += 1 + 4;
    }
    if (bbox_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bbox);
    }
    if (segm_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Segm);
    }
    if (florplanpoint_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Florplanpoint);
    }
    if (Features.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Features);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ObjectAnnotation other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.Score != 0F) {
      Score = other.Score;
    }
    if (other.bbox_ != null) {
      if (bbox_ == null) {
        bbox_ = new global::BBox();
      }
      Bbox.MergeFrom(other.Bbox);
    }
    if (other.segm_ != null) {
      if (segm_ == null) {
        segm_ = new global::SegmObject();
      }
      Segm.MergeFrom(other.Segm);
    }
    if (other.florplanpoint_ != null) {
      if (florplanpoint_ == null) {
        florplanpoint_ = new global::Point();
      }
      Florplanpoint.MergeFrom(other.Florplanpoint);
    }
    if (other.Features.Length != 0) {
      Features = other.Features;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ClassId = input.ReadInt32();
          break;
        }
        case 21: {
          Score = input.ReadFloat();
          break;
        }
        case 26: {
          if (bbox_ == null) {
            bbox_ = new global::BBox();
          }
          input.ReadMessage(bbox_);
          break;
        }
        case 34: {
          if (segm_ == null) {
            segm_ = new global::SegmObject();
          }
          input.ReadMessage(segm_);
          break;
        }
        case 42: {
          if (florplanpoint_ == null) {
            florplanpoint_ = new global::Point();
          }
          input.ReadMessage(florplanpoint_);
          break;
        }
        case 50: {
          Features = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ImageView : pb::IMessage<ImageView> {
  private static readonly pb::MessageParser<ImageView> _parser = new pb::MessageParser<ImageView>(() => new ImageView());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ImageView> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::QsmqReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ImageView() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ImageView(ImageView other) : this() {
    conversionType_ = other.conversionType_;
    conversionParams_ = other.conversionParams_.Clone();
    objectAnnotations_ = other.objectAnnotations_.Clone();
    imgKey_ = other.imgKey_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ImageView Clone() {
    return new ImageView(this);
  }

  /// <summary>Field number for the "conversionType" field.</summary>
  public const int ConversionTypeFieldNumber = 1;
  private int conversionType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ConversionType {
    get { return conversionType_; }
    set {
      conversionType_ = value;
    }
  }

  /// <summary>Field number for the "conversionParams" field.</summary>
  public const int ConversionParamsFieldNumber = 2;
  private static readonly pb::FieldCodec<float> _repeated_conversionParams_codec
      = pb::FieldCodec.ForFloat(18);
  private readonly pbc::RepeatedField<float> conversionParams_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> ConversionParams {
    get { return conversionParams_; }
  }

  /// <summary>Field number for the "objectAnnotations" field.</summary>
  public const int ObjectAnnotationsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::ObjectAnnotation> _repeated_objectAnnotations_codec
      = pb::FieldCodec.ForMessage(26, global::ObjectAnnotation.Parser);
  private readonly pbc::RepeatedField<global::ObjectAnnotation> objectAnnotations_ = new pbc::RepeatedField<global::ObjectAnnotation>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ObjectAnnotation> ObjectAnnotations {
    get { return objectAnnotations_; }
  }

  /// <summary>Field number for the "imgKey" field.</summary>
  public const int ImgKeyFieldNumber = 4;
  private string imgKey_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ImgKey {
    get { return imgKey_; }
    set {
      imgKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ImageView);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ImageView other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConversionType != other.ConversionType) return false;
    if(!conversionParams_.Equals(other.conversionParams_)) return false;
    if(!objectAnnotations_.Equals(other.objectAnnotations_)) return false;
    if (ImgKey != other.ImgKey) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConversionType != 0) hash ^= ConversionType.GetHashCode();
    hash ^= conversionParams_.GetHashCode();
    hash ^= objectAnnotations_.GetHashCode();
    if (ImgKey.Length != 0) hash ^= ImgKey.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ConversionType != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ConversionType);
    }
    conversionParams_.WriteTo(output, _repeated_conversionParams_codec);
    objectAnnotations_.WriteTo(output, _repeated_objectAnnotations_codec);
    if (ImgKey.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(ImgKey);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConversionType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConversionType);
    }
    size += conversionParams_.CalculateSize(_repeated_conversionParams_codec);
    size += objectAnnotations_.CalculateSize(_repeated_objectAnnotations_codec);
    if (ImgKey.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ImgKey);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ImageView other) {
    if (other == null) {
      return;
    }
    if (other.ConversionType != 0) {
      ConversionType = other.ConversionType;
    }
    conversionParams_.Add(other.conversionParams_);
    objectAnnotations_.Add(other.objectAnnotations_);
    if (other.ImgKey.Length != 0) {
      ImgKey = other.ImgKey;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ConversionType = input.ReadInt32();
          break;
        }
        case 18:
        case 21: {
          conversionParams_.AddEntriesFrom(input, _repeated_conversionParams_codec);
          break;
        }
        case 26: {
          objectAnnotations_.AddEntriesFrom(input, _repeated_objectAnnotations_codec);
          break;
        }
        case 34: {
          ImgKey = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CameraImage : pb::IMessage<CameraImage> {
  private static readonly pb::MessageParser<CameraImage> _parser = new pb::MessageParser<CameraImage>(() => new CameraImage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CameraImage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::QsmqReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CameraImage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CameraImage(CameraImage other) : this() {
    videoStreamName_ = other.videoStreamName_;
    timestamp_ = other.timestamp_;
    views_ = other.views_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CameraImage Clone() {
    return new CameraImage(this);
  }

  /// <summary>Field number for the "videoStreamName" field.</summary>
  public const int VideoStreamNameFieldNumber = 1;
  private string videoStreamName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string VideoStreamName {
    get { return videoStreamName_; }
    set {
      videoStreamName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "timestamp" field.</summary>
  public const int TimestampFieldNumber = 2;
  private double timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Timestamp {
    get { return timestamp_; }
    set {
      timestamp_ = value;
    }
  }

  /// <summary>Field number for the "views" field.</summary>
  public const int ViewsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::ImageView> _repeated_views_codec
      = pb::FieldCodec.ForMessage(26, global::ImageView.Parser);
  private readonly pbc::RepeatedField<global::ImageView> views_ = new pbc::RepeatedField<global::ImageView>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ImageView> Views {
    get { return views_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CameraImage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CameraImage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (VideoStreamName != other.VideoStreamName) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Timestamp, other.Timestamp)) return false;
    if(!views_.Equals(other.views_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (VideoStreamName.Length != 0) hash ^= VideoStreamName.GetHashCode();
    if (Timestamp != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Timestamp);
    hash ^= views_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (VideoStreamName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(VideoStreamName);
    }
    if (Timestamp != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Timestamp);
    }
    views_.WriteTo(output, _repeated_views_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (VideoStreamName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(VideoStreamName);
    }
    if (Timestamp != 0D) {
      size += 1 + 8;
    }
    size += views_.CalculateSize(_repeated_views_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CameraImage other) {
    if (other == null) {
      return;
    }
    if (other.VideoStreamName.Length != 0) {
      VideoStreamName = other.VideoStreamName;
    }
    if (other.Timestamp != 0D) {
      Timestamp = other.Timestamp;
    }
    views_.Add(other.views_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          VideoStreamName = input.ReadString();
          break;
        }
        case 17: {
          Timestamp = input.ReadDouble();
          break;
        }
        case 26: {
          views_.AddEntriesFrom(input, _repeated_views_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
